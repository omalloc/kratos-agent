syntax = "proto3";
package kratos.api;

option go_package = "github.com/go-kratos/kratos-layout/internal/conf;conf";

import "google/protobuf/duration.proto";
import "protobuf/tracing.proto";
import "protobuf/registry.proto";

message Bootstrap {
  Server server = 1;
  Data data = 2;
  omalloc.protobuf.Tracing tracing = 3;
  omalloc.protobuf.Registry registry = 4;
  repeated Cluster clusters = 5;
}

message Server {
  message HTTP {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  message GRPC {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  HTTP http = 1;
  GRPC grpc = 2;
}

message Data {
  message Database {
    string driver = 1;
    string source = 2;
  }
  message Redis {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration read_timeout = 3;
    google.protobuf.Duration write_timeout = 4;
  }
  Database database = 1;
  Redis redis = 2;
}

message Cluster {
  string name = 1; // 集群名称
  bool enabled = 2; // 是否开启连接
  repeated string endpoints = 3; // 集群入口
}